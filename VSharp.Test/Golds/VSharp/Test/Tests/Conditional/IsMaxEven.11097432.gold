METHOD: System.Boolean VSharp.Test.Tests.Conditional.IsMaxEven(System.Int32, System.Int32, System.Int32)
RESULT: Totally 4 states:
0 == z % 2
MEMORY DUMP:
Path condition: 2 * x < z /\ 2 * y < z
--------------- Array contents: ---------------
System.Double[] ==> {
        3.3.3[0] <- 1
        3.3.3[1] <- 10
        3.3.3[2] <- 100
        3.3.3[3] <- 1000
        3.3.3[4] <- 10000
        3.3.3[5] <- 100000
        3.3.3[6] <- 1000000
        3.3.3[7] <- 10000000
        3.3.3[8] <- 100000000
        3.3.3[9] <- 1000000000
        3.3.3[10] <- 10000000000
        3.3.3[11] <- 100000000000
        3.3.3[12] <- 1000000000000
        3.3.3[13] <- 10000000000000
        3.3.3[14] <- 100000000000000
        3.3.3[15] <- 1000000000000000
    }
--------------- Array lengths: ---------------
System.Double[] ==> {3.3.3[0] <- 16}
--------------- Types tokens: ---------------
3.3.3 ==> System.Double[]
--------------- Static fields: ---------------
E ==> {System.Math <- 2.718281828459045}
PI ==> {System.Math <- 3.141592653589793}
roundPower10Double ==> {System.Math <- (HeapRef 3.3.3 to System.Double[])}
Initialized types = { VSharp.Test.Tests.Conditional, System.Runtime.CompilerServices.RuntimeHelpers, System.Math }

True
MEMORY DUMP:
Path condition: !(2 * x < z) /\ 2 * y < z
--------------- Array contents: ---------------
System.Double[] ==> {
        3.3.3[0] <- 1
        3.3.3[1] <- 10
        3.3.3[2] <- 100
        3.3.3[3] <- 1000
        3.3.3[4] <- 10000
        3.3.3[5] <- 100000
        3.3.3[6] <- 1000000
        3.3.3[7] <- 10000000
        3.3.3[8] <- 100000000
        3.3.3[9] <- 1000000000
        3.3.3[10] <- 10000000000
        3.3.3[11] <- 100000000000
        3.3.3[12] <- 1000000000000
        3.3.3[13] <- 10000000000000
        3.3.3[14] <- 100000000000000
        3.3.3[15] <- 1000000000000000
    }
--------------- Array lengths: ---------------
System.Double[] ==> {3.3.3[0] <- 16}
--------------- Types tokens: ---------------
3.3.3 ==> System.Double[]
--------------- Static fields: ---------------
E ==> {System.Math <- 2.718281828459045}
PI ==> {System.Math <- 3.141592653589793}
roundPower10Double ==> {System.Math <- (HeapRef 3.3.3 to System.Double[])}
Initialized types = { VSharp.Test.Tests.Conditional, System.Runtime.CompilerServices.RuntimeHelpers, System.Math }

True
MEMORY DUMP:
Path condition: !(2 * y < z) /\ 2 * x < 2 * y
--------------- Array contents: ---------------
System.Double[] ==> {
        3.3.3[0] <- 1
        3.3.3[1] <- 10
        3.3.3[2] <- 100
        3.3.3[3] <- 1000
        3.3.3[4] <- 10000
        3.3.3[5] <- 100000
        3.3.3[6] <- 1000000
        3.3.3[7] <- 10000000
        3.3.3[8] <- 100000000
        3.3.3[9] <- 1000000000
        3.3.3[10] <- 10000000000
        3.3.3[11] <- 100000000000
        3.3.3[12] <- 1000000000000
        3.3.3[13] <- 10000000000000
        3.3.3[14] <- 100000000000000
        3.3.3[15] <- 1000000000000000
    }
--------------- Array lengths: ---------------
System.Double[] ==> {3.3.3[0] <- 16}
--------------- Types tokens: ---------------
3.3.3 ==> System.Double[]
--------------- Static fields: ---------------
E ==> {System.Math <- 2.718281828459045}
PI ==> {System.Math <- 3.141592653589793}
roundPower10Double ==> {System.Math <- (HeapRef 3.3.3 to System.Double[])}
Initialized types = { VSharp.Test.Tests.Conditional, System.Runtime.CompilerServices.RuntimeHelpers, System.Math }

True
MEMORY DUMP:
Path condition: !(2 * x < 2 * y) /\ !(2 * y < z)
--------------- Array contents: ---------------
System.Double[] ==> {
        3.3.3[0] <- 1
        3.3.3[1] <- 10
        3.3.3[2] <- 100
        3.3.3[3] <- 1000
        3.3.3[4] <- 10000
        3.3.3[5] <- 100000
        3.3.3[6] <- 1000000
        3.3.3[7] <- 10000000
        3.3.3[8] <- 100000000
        3.3.3[9] <- 1000000000
        3.3.3[10] <- 10000000000
        3.3.3[11] <- 100000000000
        3.3.3[12] <- 1000000000000
        3.3.3[13] <- 10000000000000
        3.3.3[14] <- 100000000000000
        3.3.3[15] <- 1000000000000000
    }
--------------- Array lengths: ---------------
System.Double[] ==> {3.3.3[0] <- 16}
--------------- Types tokens: ---------------
3.3.3 ==> System.Double[]
--------------- Static fields: ---------------
E ==> {System.Math <- 2.718281828459045}
PI ==> {System.Math <- 3.141592653589793}
roundPower10Double ==> {System.Math <- (HeapRef 3.3.3 to System.Double[])}
Initialized types = { VSharp.Test.Tests.Conditional, System.Runtime.CompilerServices.RuntimeHelpers, System.Math }
