METHOD: System.Action`1[System.Int32] VSharp.Test.Tests.PDR.CreateLambda(System.Boolean)
RESULT: Totally 2 states:
(HeapRef 8 to System.Action`1[System.Int32])
MEMORY DUMP:
Path condition: !flag
--------------- Fields: ---------------
a ==> {3 <- 0}
b ==> {3 <- 0}
c ==> {3 <- 0}
--------------- Types tokens: ---------------
3 ==> VSharp.Test.Tests.PDR+<>c__DisplayClass1_0
--------------- Delegates: ---------------
8 ==> <Lambda Expression System.Action`1[System.Int32]>
--------------- Stack: ---------------
key = __loc__1, value = (HeapRef 8 to System.Action`1[System.Int32])
key = __loc__0, value = (HeapRef 3 to VSharp.Test.Tests.PDR+<>c__DisplayClass1_0)
Initialized types = { VSharp.Test.Tests.PDR, System.Object, VSharp.Test.Tests.PDR+<>c__DisplayClass1_0 }

(HeapRef 12 to System.Action`1[System.Int32])
MEMORY DUMP:
Path condition: flag
--------------- Fields: ---------------
a ==> {3 <- 0}
b ==> {3 <- 0}
c ==> {3 <- 0}
--------------- Types tokens: ---------------
3 ==> VSharp.Test.Tests.PDR+<>c__DisplayClass1_0
--------------- Delegates: ---------------
12 ==> <Lambda Expression System.Action`1[System.Int32]>
--------------- Stack: ---------------
key = __loc__1, value = (HeapRef 12 to System.Action`1[System.Int32])
key = __loc__0, value = (HeapRef 3 to VSharp.Test.Tests.PDR+<>c__DisplayClass1_0)
Initialized types = { VSharp.Test.Tests.PDR, System.Object, VSharp.Test.Tests.PDR+<>c__DisplayClass1_0 }
